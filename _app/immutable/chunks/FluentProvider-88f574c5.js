import{ad as y,ae as f,S as x,i as C,s as S,O as w,W as T,X as E,Y as O,f as A,t as F,C as P,af as j,$ as B}from"./index-cdc603c4.js";function h(s,t){return Array.isArray(t)?t.map(r=>m(s,r)):m(s,t)}function m(s,t){for(const r of s)if(r.hasMessage(t))return r;return null}class I extends Array{static from(t){return t instanceof this?t:new this(t)}}class d extends I{constructor(t){if(super(),Symbol.iterator in Object(t))this.iterator=t[Symbol.iterator]();else throw new TypeError("Argument must implement the iteration protocol.")}[Symbol.iterator](){const t=this;let r=0;return{next(){return t.length<=r&&t.push(t.iterator.next()),t[r++]}}}touchNext(t=1){let r=0;for(;r++<t;){const e=this[this.length-1];if(e&&e.done)break;this.push(this.iterator.next())}return this[this.length-1]}}function $(s){let t;const r=s[2].default,e=w(r,s,s[1],null);return{c(){e&&e.c()},l(n){e&&e.l(n)},m(n,o){e&&e.m(n,o),t=!0},p(n,[o]){e&&e.p&&(!t||o&2)&&T(e,r,n,n[1],t?O(r,n[1],o,null):E(n[1]),null)},i(n){t||(A(e,n),t=!0)},o(n){F(e,n),t=!1},d(n){e&&e.d(n)}}}const b={};function X(){const s=y(b);if(!s){console.error("[svelte-fluent] <FluentProvider/> was not found in component hierarchy.");return}const{bundles:t,dispatch:r}=s,e=f(t,u=>a=>h(u,a)),n=f(t,u=>(a,i)=>{const l=h(u,a);if(l===null)return r("error",`[svelte-fluent] Translation missing: "${a}"`),{value:a,attributes:{}};const c=l.getMessage(a);if(c===null)return r("error",`[svelte-fluent] Translation missing: "${a}"`),{value:a,attributes:{}};const p=l.formatPattern(c.value,i),_=Object.fromEntries(Object.entries(c.attributes||{}).map(([g,v])=>[g,l.formatPattern(v,i)]));return{value:p,attributes:_}}),o=f(n,u=>(a,i)=>u(a,i).value);return{getBundle:e,getTranslation:n,translate:o}}function M(s,t,r){let{$$slots:e={},$$scope:n}=t,{bundles:o=[]}=t;const{subscribe:u,set:a}=P(d.from(o));return j(b,{bundles:{subscribe:u},dispatch:B()}),s.$$set=i=>{"bundles"in i&&r(0,o=i.bundles),"$$scope"in i&&r(1,n=i.$$scope)},s.$$.update=()=>{s.$$.dirty&1&&a(d.from(o))},[o,n,e]}class Y extends x{constructor(t){super(),C(this,t,M,$,S,{bundles:0})}}export{Y as F,X as s};
